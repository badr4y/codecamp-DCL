# -*- coding: utf-8 -*-
"""codecamp.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZyxQwwJzS7jC37ACEyTW8FoBixqQOh2w

# GENERAL
"""

import argparse

""""
mettez vos noms :
romain
Clément
Badr
Mehdi
Yoann
Mohcine
"""""

import argparse

def getTaskFromStr(textFileLine : str) -> (int, str) :
    """
    Fonction qui renvoie l'indice et la description de la tâche à partir d'une ligne du fichier

    Args:
        parametre1 (str): Une ligne du fichier

    Returns:
        (int, str): (indice de la ligne,
                    description de la tâche)
    """
    index = textFileLine.find(',')
    return (int(textFileLine[:index]),textFileLine[index+1:])


def getAllTasks(fileName: str):
    res = []
    with open(fileName, 'r') as file:
        for line in file:
            res.append(getTaskFromStr(line))
    return res








def main():
    u,v = getTaskFromStr("1,test d'une tache, avec une virgule")
    print(u)
    print(v)

if __name__ == "__main__":
    main()

def showTasks(filename: str) -> None:
    tasks = getAllTasks(filename)
    maxIdStrLength = max([len(str(task[0])) for task in tasks])
    descriptionMaxLength = max([len(task[1]) for task in tasks])
    lineSep = '+'+ maxIdStrLength*'-' + '+' + descriptionMaxLength*'-' + '+'
    print(lineSep)
    for task in tasks:
        idStr = str(task[0])
        paddingId = maxIdStrLength - len(idStr)
        paddingDesc = descriptionMaxLength - len(task[1])
        print("|"+idStr+" "*paddingId+'|'+task[1]+" "*paddingDesc + "|")
        print(lineSep)

"""[texte du lien](https://)Mehdi"""

def addTask(filenampasse : file, description : str) -> None :
    with open(filename, 'r') as file:
        lines = file.readlines()
        TaskID = getTaskFromStr(lines[-1])[0] + 1
    with open(filename, 'w' ) as file :
        file.write(str(TaskID)+ ", " +  description)

def removeTask(filename: str, indice : int) -> None :
    with open(filename, 'r') as file:
        lines = file.readlines()

    with open(filename, 'w') as file :
        for index,line in enumerate(lines) :
            if index < indice :
                file.write(line)
            elif index == indice :
                pass
            else :
                #Il faut diminuer l'indice des lignes après la tache par 1
                list_line = line.split(",")
                file.write(str(index) + ',' + list_line[1])